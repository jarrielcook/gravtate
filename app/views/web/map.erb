<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
      html { height: 100% }
      body { height: 100%; margin: 0; padding: 0 }
      map_canvas { height: 90% }
    </style>
    <script src="/javascripts/prototype.js" type="text/javascript"></script>
    <script type="text/javascript"
      src="http://maps.googleapis.com/maps/api/js?key=AIzaSyA6Fi5wZ9hegiV5RyUcvo02bRNK76XQJJ8&sensor=false">
    </script>
    <script type="text/javascript">
      var map;
      var sw, ne;

      function lowerSide(val) {
        lower = Math.floor(val * 1000) / 1000 - 0.0005;
        return lower;
      }

      function upperSide(val) {
        upper = Math.floor(val * 1000 + 1) / 1000 - 0.0005;
        return upper;
      }

      function makeStruct(names) {
        var names = names.split(' ');
        var count = names.length;
          function constructor() {
            for (var i = 0; i < count; i++) {
              this[names[i]] = arguments[i];
            }
          }
          return constructor;
      }

      function HSVtoRGB(h, s, v ) {
        var i;
        var f, p, q, t;
        var r, g, b;

        if( s == 0 ) {
          // achromatic (grey)
          r = g = b = v;
          return;
        }

        h /= 60;      // sector 0 to 5
        i = floor( h );
        f = h - i;      // factorial part of h
        p = v * ( 1 - s );
        q = v * ( 1 - s * f );
        t = v * ( 1 - s * ( 1 - f ) );

        switch( i ) {
          case 0:
            r = v;
            g = t;
            b = p;
            break;
          case 1:
            r = q;
            g = v;
            b = p;
            break;
          case 2:
            r = p;
            g = v;
            b = t;
            break;
          case 3:
            r = p;
            g = q;
            b = v;
            break;
          case 4:
            r = t;
            g = p;
            b = v;
            break;
          default:    // case 5:
            r = v;
            g = p;
            b = q;
            break;
        }

        var RGB = makeStruct("R G B");
        var rgbval = new RGB(r,g,b);

        return rgbval;
      }

      function setLocation(lat, lon) {
        map.setCenter(new google.maps.LatLng(lat,lon));
      }

      function initialize() {
        var mapOptions = {
          zoom: 14,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
        setLocation(<%= @lat %>, <%= @lon %>);

        <% if(!@result.nil?) %>
          <% @result.each do |r| %>
            var sw = new google.maps.LatLng(lowerSide(<%= r.lat %>), lowerSide(<%= r.lon %>));
            var ne = new google.maps.LatLng(upperSide(<%= r.lat %>), upperSide(<%= r.lon %>));
            var bounds = new google.maps.LatLngBounds(sw, ne);
            var rectOptions = {
                 strokeColor: "#FF0000",
                 strokeOpacity: 0.8,
                 strokeWeight: 0,
                 fillColor: "#FF0000",
                 fillOpacity: 0.35,
                 bounds: bounds,
                 map: map
            };
            var rect = new google.maps.Rectangle(rectOptions);
          <% end %>
        <% end %>
      }
 
    </script>
  </head>
  <body onload="initialize()">
    <div id="map_canvas" style="width:100%; height:100%">
      <script type="text/javascript">
      </script>
    </div>
    </div>
  </body>
</html>

